/* tslint:disable */
/* eslint-disable */
/**
 * Merge Ticketing API
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    DebugModelLogSummary,
    DebugModelLogSummaryFromJSON,
    DebugModelLogSummaryFromJSONTyped,
    DebugModelLogSummaryToJSON,
} from './';


/**
 * 
 * @export
 * @interface DebugModeLog
 */
export interface DebugModeLog {
    /**
     * 
     * @type {string}
     * @memberof DebugModeLog
     */
    log_id: string;
    /**
     * 
     * @type {string}
     * @memberof DebugModeLog
     */
    dashboard_view: string;
    /**
     * 
     * @type {DebugModelLogSummary}
     * @memberof DebugModeLog
     */
    log_summary: DebugModelLogSummary;
}

export function DebugModeLogFromJSON(json: JSONValue): DebugModeLog | null {
    return DebugModeLogFromJSONTyped(json);
}

export function DebugModeLogFromJSONTyped(json: JSONValue): DebugModeLog | null {
    if ((json === undefined) || (json === null)) {
        return null;
    }

    return {
        
        'log_id': json['log_id'],
        'dashboard_view': json['dashboard_view'],
        'log_summary': DebugModelLogSummaryFromJSON(json['log_summary']),
    };
}

export function DebugModeLogToJSON(value?: DebugModeLog): JSONValue {
    if (value === undefined || value === null) {
        return null;
    }

    return {
        
        'log_id': value.log_id,
        'dashboard_view': value.dashboard_view,
        'log_summary': DebugModelLogSummaryToJSON(value.log_summary),
    };
}

