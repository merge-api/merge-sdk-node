/* tslint:disable */
/* eslint-disable */
/**
 * Merge Ticketing API
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    CommonModelScopesDisabledModels,
    CommonModelScopesDisabledModelsFromJSON,
    CommonModelScopesDisabledModelsFromJSONTyped,
    CommonModelScopesDisabledModelsToJSON,
    CommonModelScopesScope,
    CommonModelScopesScopeFromJSON,
    CommonModelScopesScopeFromJSONTyped,
    CommonModelScopesScopeToJSON,
} from './';


/**
 * 
 * @export
 * @interface CommonModelScopes
 */
export interface CommonModelScopes {
    /**
     * 
     * @type {CommonModelScopesScope}
     * @memberof CommonModelScopes
     */
    scope: CommonModelScopesScope;
    /**
     * 
     * @type {Array<CommonModelScopesDisabledModels>}
     * @memberof CommonModelScopes
     */
    common_models: Array<CommonModelScopesDisabledModels>;
}

export function CommonModelScopesFromJSON(json: JSONValue): CommonModelScopes | undefined {
    return CommonModelScopesFromJSONTyped(json);
}

export function CommonModelScopesFromJSONTyped(json: JSONValue): CommonModelScopes | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'scope': CommonModelScopesScopeFromJSON(json['scope']) as CommonModelScopesScope,
        'common_models': ((json['common_models'] as Array<JSONValue>).map(CommonModelScopesDisabledModelsFromJSON)) as Array<CommonModelScopesDisabledModels>,
    };
}

export function CommonModelScopesToJSON(value?: CommonModelScopes): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'scope': CommonModelScopesScopeToJSON(value.scope),
        'common_models': ((value.common_models as Array<any>).map(CommonModelScopesDisabledModelsToJSON)),
    };
}

