/* tslint:disable */
/* eslint-disable */
/**
 * Merge Ticketing API
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';

/**
 * 
 * @export
 * @interface ItemSchema
 */
export interface ItemSchema {
    /**
     * 
     * @type {boolean}
     * @memberof ItemSchema
     */
    item_type?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ItemSchema
     */
    item_format?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof ItemSchema
     */
    item_choices?: Array<string>;
}

export function ItemSchemaFromJSON(json: JSONValue): ItemSchema | undefined {
    return ItemSchemaFromJSONTyped(json);
}

export function ItemSchemaFromJSONTyped(json: JSONValue): ItemSchema | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'item_type': !exists(json, 'item_type') ? undefined : json['item_type'],
        'item_format': !exists(json, 'item_format') ? undefined : json['item_format'],
        'item_choices': !exists(json, 'item_choices') ? undefined : json['item_choices'],
    };
}

export function ItemSchemaToJSON(value?: ItemSchema): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'item_type': value.item_type,
        'item_format': value.item_format,
        'item_choices': value.item_choices,
    };
}

