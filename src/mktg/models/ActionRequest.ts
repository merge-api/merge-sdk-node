/* tslint:disable */
/* eslint-disable */
/**
 * Merge Marketing Automation API
 * The unified API for building rich integrations with multiple Marketing Automation platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    TypeEnum,
    TypeEnumFromJSON,
    TypeEnumFromJSONTyped,
    TypeEnumToJSON,
} from './';


/**
 * # The Action Object
 * ### Description
 * The `Action` object is used to represent an action executed within an automation.
 * ### Usage Example
 * Fetch from the `GET /api/mktg/v1/actions` endpoint and view their types.
 * @export
 * @interface ActionRequest
 */
export interface ActionRequest {
    /**
     * The action's name.
     * @type {string}
     * @memberof ActionRequest
     */
    name?: string | null;
    /**
     * The marketing emails sent by this action.
     * @type {Array<string>}
     * @memberof ActionRequest
     */
    emails: Array<string>;
    /**
     * The messages sent by this action.
     * @type {Array<string>}
     * @memberof ActionRequest
     */
    messages: Array<string>;
    /**
     * The action's type.
     * 
     * * `EMAIL` - EMAIL
     * * `MESSAGE` - MESSAGE
     * @type {TypeEnum}
     * @memberof ActionRequest
     */
    type?: TypeEnum | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ActionRequest
     */
    integration_params?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ActionRequest
     */
    linked_account_params?: { [key: string]: any; } | null;
}

export function ActionRequestFromJSON(json: JSONValue): ActionRequest | undefined {
    return ActionRequestFromJSONTyped(json);
}

export function ActionRequestFromJSONTyped(json: JSONValue): ActionRequest | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'emails': json['emails'],
        'messages': json['messages'],
        'type': !exists(json, 'type') ? undefined : TypeEnumFromJSON(json['type']) as TypeEnum,
        'integration_params': !exists(json, 'integration_params') ? undefined : json['integration_params'],
        'linked_account_params': !exists(json, 'linked_account_params') ? undefined : json['linked_account_params'],
    };
}

export function ActionRequestToJSON(value?: ActionRequest): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'name': value.name,
        'emails': value.emails,
        'messages': value.messages,
        'type': TypeEnumToJSON(value.type),
        'integration_params': value.integration_params,
        'linked_account_params': value.linked_account_params,
    };
}

