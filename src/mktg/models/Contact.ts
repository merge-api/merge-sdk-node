/* tslint:disable */
/* eslint-disable */
/**
 * Merge Marketing Automation API
 * The unified API for building rich integrations with multiple Marketing Automation platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    CountryEnum,
    CountryEnumFromJSON,
    CountryEnumFromJSONTyped,
    CountryEnumToJSON,
} from './';


/**
 * # The Contact Object
 * ### Description
 * The `Contact` object is used to represent a contact in the remote system.
 * ### Usage Example
 * Fetch from the `GET /api/mktg/v1/contact` endpoint and view their phone numbers.
 * @export
 * @interface Contact
 */
export interface Contact {
    /**
     * The contact's first name.
     * @type {string}
     * @memberof Contact
     */
    first_name?: string | null;
    /**
     * The contact's last name.
     * @type {string}
     * @memberof Contact
     */
    last_name?: string | null;
    /**
     * The contact's email.
     * @type {string}
     * @memberof Contact
     */
    email?: string | null;
    /**
     * The contact's phone.
     * @type {string}
     * @memberof Contact
     */
    phone?: string | null;
    /**
     * The contact's state.
     * @type {string}
     * @memberof Contact
     */
    state?: string | null;
    /**
     * The contact's country.
     * @type {CountryEnum}
     * @memberof Contact
     */
    country?: CountryEnum | null;
    /**
     * The contact's postal code.
     * @type {string}
     * @memberof Contact
     */
    postal_code?: string | null;
    /**
     * When the contact was created in the remote system.
     * @type {Date}
     * @memberof Contact
     */
    remote_created_at?: Date | null;
    /**
     * When the contact was last updated in the remote system.
     * @type {Date}
     * @memberof Contact
     */
    remote_updated_at?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Contact
     */
    readonly id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof Contact
     */
    remote_id?: string | null;
}

export function ContactFromJSON(json: JSONValue): Contact | undefined {
    return ContactFromJSONTyped(json);
}

export function ContactFromJSONTyped(json: JSONValue): Contact | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'first_name': !exists(json, 'first_name') ? undefined : json['first_name'],
        'last_name': !exists(json, 'last_name') ? undefined : json['last_name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'country': !exists(json, 'country') ? undefined : CountryEnumFromJSON(json['country']) as CountryEnum,
        'postal_code': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'remote_created_at': !exists(json, 'remote_created_at') ? undefined : (json['remote_created_at'] === null ? null : new Date(json['remote_created_at'])),
        'remote_updated_at': !exists(json, 'remote_updated_at') ? undefined : (json['remote_updated_at'] === null ? null : new Date(json['remote_updated_at'])),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
    };
}

export function ContactToJSON(value?: Contact): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'first_name': value.first_name,
        'last_name': value.last_name,
        'email': value.email,
        'phone': value.phone,
        'state': value.state,
        'country': CountryEnumToJSON(value.country),
        'postal_code': value.postal_code,
        'remote_created_at': value.remote_created_at === undefined ? undefined : (value.remote_created_at === null ? null : value.remote_created_at.toISOString()),
        'remote_updated_at': value.remote_updated_at === undefined ? undefined : (value.remote_updated_at === null ? null : value.remote_updated_at.toISOString()),
        'remote_id': value.remote_id,
    };
}

