/* tslint:disable */
/* eslint-disable */
/**
 * Merge CRM API
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { JSONValue } from '../../merge_json'
import {
    CategoriesEnum,
    CategoriesEnumFromJSON,
    CategoriesEnumFromJSONTyped,
    CategoriesEnumToJSON,
    ModelOperation,
    ModelOperationFromJSON,
    ModelOperationFromJSONTyped,
    ModelOperationToJSON,
} from './';


/**
 * 
 * @export
 * @interface AccountDetailsAndActionsIntegration
 */
export interface AccountDetailsAndActionsIntegration {
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActionsIntegration
     */
    name: string;
    /**
     * 
     * @type {Array<CategoriesEnum>}
     * @memberof AccountDetailsAndActionsIntegration
     */
    categories: Array<CategoriesEnum>;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActionsIntegration
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActionsIntegration
     */
    square_image?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActionsIntegration
     */
    color: string;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActionsIntegration
     */
    slug: string;
    /**
     * 
     * @type {boolean}
     * @memberof AccountDetailsAndActionsIntegration
     */
    passthrough_available: boolean;
    /**
     * 
     * @type {Array<ModelOperation>}
     * @memberof AccountDetailsAndActionsIntegration
     */
    available_model_operations?: Array<ModelOperation>;
}

export function AccountDetailsAndActionsIntegrationFromJSON(json: JSONValue): AccountDetailsAndActionsIntegration {
    return AccountDetailsAndActionsIntegrationFromJSONTyped(json);
}

export function AccountDetailsAndActionsIntegrationFromJSONTyped(json: JSONValue): AccountDetailsAndActionsIntegration {
    if ((json === undefined) || (json === null)) {
        return json;
    }

    return {
        
        'name': json['name'],
        'categories': ((json['categories'] as Array<any>).map(CategoriesEnumFromJSON)),
        'image': !exists(json, 'image') ? undefined : json['image'],
        'square_image': !exists(json, 'square_image') ? undefined : json['square_image'],
        'color': json['color'],
        'slug': json['slug'],
        'passthrough_available': json['passthrough_available'],
        'available_model_operations': !exists(json, 'available_model_operations') ? undefined : ((json['available_model_operations'] as Array<any>).map(ModelOperationFromJSON)),
    };
}

export function AccountDetailsAndActionsIntegrationToJSON(value?: AccountDetailsAndActionsIntegration | null): JSONValue {
    if (value === undefined || value === null) {
        return value;
    }

    return {
        
        'name': value.name,
        'categories': ((value.categories as Array<any>).map(CategoriesEnumToJSON)),
        'image': value.image,
        'square_image': value.square_image,
        'color': value.color,
        'slug': value.slug,
        'passthrough_available': value.passthrough_available,
        'available_model_operations': value.available_model_operations === undefined ? undefined : ((value.available_model_operations as Array<any>).map(ModelOperationToJSON)),
    };
}

