/* tslint:disable */
/* eslint-disable */
/**
 * Merge CRM API
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    RemoteField,
    RemoteFieldFromJSON,
    RemoteFieldFromJSONTyped,
    RemoteFieldToJSON,
} from './';


/**
 * # The CustomObject Object
 * ### Description
 * The `Custom Object` record refers to an instance of a Custom Object Class.
 * ### Usage Example
 * TODO
 * @export
 * @interface CustomObject
 */
export interface CustomObject {
    /**
     * 
     * @type {string}
     * @memberof CustomObject
     */
    object_class?: string | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof CustomObject
     */
    readonly fields?: { [key: string]: any; };
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof CustomObject
     */
    remote_id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomObject
     */
    readonly id?: string;
    /**
     * 
     * @type {Array<RemoteField>}
     * @memberof CustomObject
     */
    readonly remote_fields?: Array<RemoteField>;
}

export function CustomObjectFromJSON(json: JSONValue): CustomObject | undefined {
    return CustomObjectFromJSONTyped(json);
}

export function CustomObjectFromJSONTyped(json: JSONValue): CustomObject | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'object_class': !exists(json, 'object_class') ? undefined : json['object_class'],
        'fields': !exists(json, 'fields') ? undefined : json['fields'],
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remote_fields': !exists(json, 'remote_fields') ? undefined : ((json['remote_fields'] as Array<JSONValue>).map(RemoteFieldFromJSON)) as Array<RemoteField>,
    };
}

export function CustomObjectToJSON(value?: CustomObject): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'object_class': value.object_class,
        'remote_id': value.remote_id,
    };
}

