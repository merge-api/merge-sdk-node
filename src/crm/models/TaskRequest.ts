/* tslint:disable */
/* eslint-disable */
/**
 * Merge CRM API
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    RemoteFieldRequest,
    RemoteFieldRequestFromJSON,
    RemoteFieldRequestFromJSONTyped,
    RemoteFieldRequestToJSON,
    TaskStatusEnum,
    TaskStatusEnumFromJSON,
    TaskStatusEnumFromJSONTyped,
    TaskStatusEnumToJSON,
} from './';


/**
 * # The Task Object
 * ### Description
 * The `Task` object is used to represent a task, such as a to-do item.
 * ### Usage Example
 * TODO
 * @export
 * @interface TaskRequest
 */
export interface TaskRequest {
    /**
     * The task's subject.
     * @type {string}
     * @memberof TaskRequest
     */
    subject?: string | null;
    /**
     * The task's content.
     * @type {string}
     * @memberof TaskRequest
     */
    content?: string | null;
    /**
     * The task's owner.
     * @type {string}
     * @memberof TaskRequest
     */
    owner?: string | JSONValue | null;
    /**
     * The task's account.
     * @type {string}
     * @memberof TaskRequest
     */
    account?: string | JSONValue | null;
    /**
     * The task's opportunity.
     * @type {string}
     * @memberof TaskRequest
     */
    opportunity?: string | JSONValue | null;
    /**
     * When the task is completed.
     * @type {Date}
     * @memberof TaskRequest
     */
    completed_date?: Date | null;
    /**
     * When the task is due.
     * @type {Date}
     * @memberof TaskRequest
     */
    due_date?: Date | null;
    /**
     * The task's status.
     * 
     * * `OPEN` - OPEN
     * * `CLOSED` - CLOSED
     * @type {TaskStatusEnum}
     * @memberof TaskRequest
     */
    status?: TaskStatusEnum | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof TaskRequest
     */
    integration_params?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof TaskRequest
     */
    linked_account_params?: { [key: string]: any; } | null;
    /**
     * 
     * @type {Array<RemoteFieldRequest>}
     * @memberof TaskRequest
     */
    remote_fields?: Array<RemoteFieldRequest>;
}

export function TaskRequestFromJSON(json: JSONValue): TaskRequest | undefined {
    return TaskRequestFromJSONTyped(json);
}

export function TaskRequestFromJSONTyped(json: JSONValue): TaskRequest | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'account': !exists(json, 'account') ? undefined : json['account'],
        'opportunity': !exists(json, 'opportunity') ? undefined : json['opportunity'],
        'completed_date': !exists(json, 'completed_date') ? undefined : (json['completed_date'] === null ? null : new Date(json['completed_date'])),
        'due_date': !exists(json, 'due_date') ? undefined : (json['due_date'] === null ? null : new Date(json['due_date'])),
        'status': !exists(json, 'status') ? undefined : TaskStatusEnumFromJSON(json['status']) as TaskStatusEnum,
        'integration_params': !exists(json, 'integration_params') ? undefined : json['integration_params'],
        'linked_account_params': !exists(json, 'linked_account_params') ? undefined : json['linked_account_params'],
        'remote_fields': !exists(json, 'remote_fields') ? undefined : ((json['remote_fields'] as Array<JSONValue>).map(RemoteFieldRequestFromJSON)) as Array<RemoteFieldRequest>,
    };
}

export function TaskRequestToJSON(value?: TaskRequest): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'subject': value.subject,
        'content': value.content,
        'owner': value.owner,
        'account': value.account,
        'opportunity': value.opportunity,
        'completed_date': value.completed_date === undefined ? undefined : (value.completed_date === null ? null : value.completed_date.toISOString()),
        'due_date': value.due_date === undefined ? undefined : (value.due_date === null ? null : value.due_date.toISOString()),
        'status': TaskStatusEnumToJSON(value.status),
        'integration_params': value.integration_params,
        'linked_account_params': value.linked_account_params,
        'remote_fields': value.remote_fields === undefined ? undefined : ((value.remote_fields as Array<any>).map(RemoteFieldRequestToJSON)),
    };
}

