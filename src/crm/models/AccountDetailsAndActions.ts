/* tslint:disable */
/* eslint-disable */
/**
 * Merge CRM API
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    AccountDetailsAndActionsIntegration,
    AccountDetailsAndActionsIntegrationFromJSON,
    AccountDetailsAndActionsIntegrationFromJSONTyped,
    AccountDetailsAndActionsIntegrationToJSON,
    AccountDetailsAndActionsStatusEnum,
    AccountDetailsAndActionsStatusEnumFromJSON,
    AccountDetailsAndActionsStatusEnumFromJSONTyped,
    AccountDetailsAndActionsStatusEnumToJSON,
    CategoryEnum,
    CategoryEnumFromJSON,
    CategoryEnumFromJSONTyped,
    CategoryEnumToJSON,
} from './';


/**
 * # The LinkedAccount Object
 * ### Description
 * The `LinkedAccount` object is used to represent an end user's link with a specific integration.
 * 
 * ### Usage Example
 * View a list of your organization's `LinkedAccount` objects.
 * @export
 * @interface AccountDetailsAndActions
 */
export interface AccountDetailsAndActions {
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActions
     */
    id: string;
    /**
     * 
     * @type {CategoryEnum}
     * @memberof AccountDetailsAndActions
     */
    category?: CategoryEnum | null;
    /**
     * 
     * @type {AccountDetailsAndActionsStatusEnum}
     * @memberof AccountDetailsAndActions
     */
    status: AccountDetailsAndActionsStatusEnum | null;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActions
     */
    status_detail?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActions
     */
    end_user_origin_id?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActions
     */
    end_user_organization_name: string;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActions
     */
    end_user_email_address: string;
    /**
     * 
     * @type {string}
     * @memberof AccountDetailsAndActions
     */
    webhook_listener_url: string;
    /**
     * Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.
     * @type {boolean}
     * @memberof AccountDetailsAndActions
     */
    is_duplicate?: boolean | null;
    /**
     * 
     * @type {AccountDetailsAndActionsIntegration}
     * @memberof AccountDetailsAndActions
     */
    integration?: AccountDetailsAndActionsIntegration;
}

export function AccountDetailsAndActionsFromJSON(json: JSONValue): AccountDetailsAndActions | undefined {
    return AccountDetailsAndActionsFromJSONTyped(json);
}

export function AccountDetailsAndActionsFromJSONTyped(json: JSONValue): AccountDetailsAndActions | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'id': json['id'],
        'category': !exists(json, 'category') ? undefined : CategoryEnumFromJSON(json['category']) as CategoryEnum,
        'status': AccountDetailsAndActionsStatusEnumFromJSON(json['status']) as AccountDetailsAndActionsStatusEnum,
        'status_detail': !exists(json, 'status_detail') ? undefined : json['status_detail'],
        'end_user_origin_id': !exists(json, 'end_user_origin_id') ? undefined : json['end_user_origin_id'],
        'end_user_organization_name': json['end_user_organization_name'],
        'end_user_email_address': json['end_user_email_address'],
        'webhook_listener_url': json['webhook_listener_url'],
        'is_duplicate': !exists(json, 'is_duplicate') ? undefined : json['is_duplicate'],
        'integration': !exists(json, 'integration') ? undefined : AccountDetailsAndActionsIntegrationFromJSON(json['integration']) as AccountDetailsAndActionsIntegration,
    };
}

export function AccountDetailsAndActionsToJSON(value?: AccountDetailsAndActions): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'id': value.id,
        'category': CategoryEnumToJSON(value.category),
        'status': AccountDetailsAndActionsStatusEnumToJSON(value.status),
        'status_detail': value.status_detail,
        'end_user_origin_id': value.end_user_origin_id,
        'end_user_organization_name': value.end_user_organization_name,
        'end_user_email_address': value.end_user_email_address,
        'webhook_listener_url': value.webhook_listener_url,
        'is_duplicate': value.is_duplicate,
        'integration': AccountDetailsAndActionsIntegrationToJSON(value.integration),
    };
}

