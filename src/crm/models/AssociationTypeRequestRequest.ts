/* tslint:disable */
/* eslint-disable */
/**
 * Merge CRM API
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    CardinalityEnum,
    CardinalityEnumFromJSON,
    CardinalityEnumFromJSONTyped,
    CardinalityEnumToJSON,
    ObjectClassDescriptionRequest,
    ObjectClassDescriptionRequestFromJSON,
    ObjectClassDescriptionRequestFromJSONTyped,
    ObjectClassDescriptionRequestToJSON,
} from './';


/**
 * 
 * @export
 * @interface AssociationTypeRequestRequest
 */
export interface AssociationTypeRequestRequest {
    /**
     * 
     * @type {ObjectClassDescriptionRequest}
     * @memberof AssociationTypeRequestRequest
     */
    source_object_class: ObjectClassDescriptionRequest;
    /**
     * 
     * @type {Array<ObjectClassDescriptionRequest>}
     * @memberof AssociationTypeRequestRequest
     */
    target_object_classes: Array<ObjectClassDescriptionRequest> | JSONValue;
    /**
     * 
     * @type {string}
     * @memberof AssociationTypeRequestRequest
     */
    remote_key_name: string;
    /**
     * 
     * @type {string}
     * @memberof AssociationTypeRequestRequest
     */
    display_name?: string;
    /**
     * 
     * @type {CardinalityEnum}
     * @memberof AssociationTypeRequestRequest
     */
    cardinality?: CardinalityEnum;
    /**
     * 
     * @type {boolean}
     * @memberof AssociationTypeRequestRequest
     */
    is_required?: boolean;
}

export function AssociationTypeRequestRequestFromJSON(json: JSONValue): AssociationTypeRequestRequest | undefined {
    return AssociationTypeRequestRequestFromJSONTyped(json);
}

export function AssociationTypeRequestRequestFromJSONTyped(json: JSONValue): AssociationTypeRequestRequest | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'source_object_class': ObjectClassDescriptionRequestFromJSON(json['source_object_class']) as ObjectClassDescriptionRequest,
        'target_object_classes': ((json['target_object_classes'] as Array<JSONValue>).map(ObjectClassDescriptionRequestFromJSON)) as Array<ObjectClassDescriptionRequest>,
        'remote_key_name': json['remote_key_name'],
        'display_name': !exists(json, 'display_name') ? undefined : json['display_name'],
        'cardinality': !exists(json, 'cardinality') ? undefined : CardinalityEnumFromJSON(json['cardinality']) as CardinalityEnum,
        'is_required': !exists(json, 'is_required') ? undefined : json['is_required'],
    };
}

export function AssociationTypeRequestRequestToJSON(value?: AssociationTypeRequestRequest): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'source_object_class': ObjectClassDescriptionRequestToJSON(value.source_object_class),
        'target_object_classes': ((value.target_object_classes as Array<any>).map(ObjectClassDescriptionRequestToJSON)),
        'remote_key_name': value.remote_key_name,
        'display_name': value.display_name,
        'cardinality': CardinalityEnumToJSON(value.cardinality),
        'is_required': value.is_required,
    };
}

