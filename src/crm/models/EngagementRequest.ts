/* tslint:disable */
/* eslint-disable */
/**
 * Merge CRM API
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    DirectionEnum,
    DirectionEnumFromJSON,
    DirectionEnumFromJSONTyped,
    DirectionEnumToJSON,
} from './';


/**
 * # The Engagement Object
 * ### Description
 * The `Engagement` object is used to represent an interaction noted in a CRM system.
 * ### Usage Example
 * TODO
 * @export
 * @interface EngagementRequest
 */
export interface EngagementRequest {
    /**
     * The engagement's owner.
     * @type {string}
     * @memberof EngagementRequest
     */
    owner?: string | JSONValue | null;
    /**
     * The engagement's content.
     * @type {string}
     * @memberof EngagementRequest
     */
    content?: string | null;
    /**
     * The engagement's subject.
     * @type {string}
     * @memberof EngagementRequest
     */
    subject?: string | null;
    /**
     * The engagement's direction.
     * @type {DirectionEnum}
     * @memberof EngagementRequest
     */
    direction?: DirectionEnum | null;
    /**
     * The engagement type of the engagement.
     * @type {string}
     * @memberof EngagementRequest
     */
    engagement_type?: string | JSONValue | null;
    /**
     * The time at which the engagement started.
     * @type {Date}
     * @memberof EngagementRequest
     */
    start_time?: Date | null;
    /**
     * The time at which the engagement ended.
     * @type {Date}
     * @memberof EngagementRequest
     */
    end_time?: Date | null;
    /**
     * The account of the engagement.
     * @type {string}
     * @memberof EngagementRequest
     */
    account?: string | JSONValue | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof EngagementRequest
     */
    contacts?: Array<string> | JSONValue;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof EngagementRequest
     */
    integration_params?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof EngagementRequest
     */
    linked_account_params?: { [key: string]: any; } | null;
}

export function EngagementRequestFromJSON(json: JSONValue): EngagementRequest | undefined {
    return EngagementRequestFromJSONTyped(json);
}

export function EngagementRequestFromJSONTyped(json: JSONValue): EngagementRequest | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'direction': !exists(json, 'direction') ? undefined : DirectionEnumFromJSON(json['direction']) as DirectionEnum,
        'engagement_type': !exists(json, 'engagement_type') ? undefined : json['engagement_type'],
        'start_time': !exists(json, 'start_time') ? undefined : (json['start_time'] === null ? null : new Date(json['start_time'])),
        'end_time': !exists(json, 'end_time') ? undefined : (json['end_time'] === null ? null : new Date(json['end_time'])),
        'account': !exists(json, 'account') ? undefined : json['account'],
        'contacts': !exists(json, 'contacts') ? undefined : json['contacts'],
        'integration_params': !exists(json, 'integration_params') ? undefined : json['integration_params'],
        'linked_account_params': !exists(json, 'linked_account_params') ? undefined : json['linked_account_params'],
    };
}

export function EngagementRequestToJSON(value?: EngagementRequest): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'owner': value.owner,
        'content': value.content,
        'subject': value.subject,
        'direction': DirectionEnumToJSON(value.direction),
        'engagement_type': value.engagement_type,
        'start_time': value.start_time === undefined ? undefined : (value.start_time === null ? null : value.start_time.toISOString()),
        'end_time': value.end_time === undefined ? undefined : (value.end_time === null ? null : value.end_time.toISOString()),
        'account': value.account,
        'contacts': value.contacts,
        'integration_params': value.integration_params,
        'linked_account_params': value.linked_account_params,
    };
}

