/* tslint:disable */
/* eslint-disable */
/**
 * Merge CRM API
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../runtime';
import {
    Association,
    AssociationFromJSON,
    AssociationToJSON,
    AssociationType,
    AssociationTypeFromJSON,
    AssociationTypeToJSON,
    CustomObject,
    CustomObjectFromJSON,
    CustomObjectToJSON,
    CustomObjectClass,
    CustomObjectClassFromJSON,
    CustomObjectClassToJSON,
    
} from '../models';
import {
	MergePaginatedResponse,
	MergePaginatedResponseFromJSON,
	MergePaginatedResponseToJSON,
} from '../../merge_paginated_response';

export interface CustomObjectClassesAssociationTypesListRequest {
    parentId: string;
    cursor?: string;
    expand?: CustomObjectClassesAssociationTypesListExpandEnum;
    includeDeletedData?: boolean;
    includeRemoteData?: boolean;
    pageSize?: number;
}

export interface CustomObjectClassesAssociationTypesRetrieveRequest {
    id: string;
    parentId: string;
    expand?: CustomObjectClassesAssociationTypesRetrieveExpandEnum;
    includeRemoteData?: boolean;
}

export interface CustomObjectClassesCustomObjectsAssociationsListRequest {
    objectId: string;
    parentId: string;
    associationTypeId?: string;
    createdAfter?: Date;
    createdBefore?: Date;
    cursor?: string;
    expand?: CustomObjectClassesCustomObjectsAssociationsListExpandEnum;
    includeDeletedData?: boolean;
    includeRemoteData?: boolean;
    modifiedAfter?: Date;
    modifiedBefore?: Date;
    pageSize?: number;
    remoteId?: string | null;
}

export interface CustomObjectClassesCustomObjectsListRequest {
    parentId: string;
    cursor?: string;
    includeDeletedData?: boolean;
    includeRemoteData?: boolean;
    pageSize?: number;
}

export interface CustomObjectClassesCustomObjectsRetrieveRequest {
    id: string;
    parentId: string;
    includeRemoteData?: boolean;
}

export interface CustomObjectClassesListRequest {
    createdAfter?: Date;
    createdBefore?: Date;
    cursor?: string;
    expand?: CustomObjectClassesListExpandEnum;
    includeDeletedData?: boolean;
    includeRemoteData?: boolean;
    modifiedAfter?: Date;
    modifiedBefore?: Date;
    pageSize?: number;
    remoteId?: string | null;
}

export interface CustomObjectClassesRetrieveRequest {
    id: string;
    expand?: CustomObjectClassesRetrieveExpandEnum;
    includeRemoteData?: boolean;
}

/**
 * 
 */
export class CustomObjectClassesApi extends runtime.BaseAPI {

    /**
     * Returns a list of `AssociationType` objects.
     */
    async customObjectClassesAssociationTypesListRaw(requestParameters: CustomObjectClassesAssociationTypesListRequest): Promise<runtime.ApiResponse<MergePaginatedResponse<AssociationType> | undefined>> {
        if (requestParameters.parentId === null || requestParameters.parentId === undefined) {
            throw new runtime.RequiredError('parentId','Required parameter requestParameters.parentId was null or undefined when calling customObjectClassesAssociationTypesList.');
        }

        const queryParameters: any = {};

        if (requestParameters.cursor !== undefined) {
            queryParameters['cursor'] = requestParameters.cursor;
        }

        if (requestParameters.expand !== undefined) {
            queryParameters['expand'] = requestParameters.expand;
        }

        if (requestParameters.includeDeletedData !== undefined) {
            queryParameters['include_deleted_data'] = requestParameters.includeDeletedData;
        }

        if (requestParameters.includeRemoteData !== undefined) {
            queryParameters['include_remote_data'] = requestParameters.includeRemoteData;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['page_size'] = requestParameters.pageSize;
        }

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/crm/v1/custom-object-classes/{parent_id}/association-types`.replace(`{${"parent_id"}}`, encodeURIComponent(String(requestParameters.parentId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MergePaginatedResponseFromJSON(jsonValue));
    }

    /**
     * Returns a list of `AssociationType` objects.
     */
    async customObjectClassesAssociationTypesList(requestParameters: CustomObjectClassesAssociationTypesListRequest): Promise<MergePaginatedResponse<AssociationType> | undefined> {
        const response = await this.customObjectClassesAssociationTypesListRaw(requestParameters);
        return await response.value();
    }

    /**
     * Returns an `AssociationType` object with the given `id`.
     */
    async customObjectClassesAssociationTypesRetrieveRaw(requestParameters: CustomObjectClassesAssociationTypesRetrieveRequest): Promise<runtime.ApiResponse<AssociationType | undefined>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling customObjectClassesAssociationTypesRetrieve.');
        }

        if (requestParameters.parentId === null || requestParameters.parentId === undefined) {
            throw new runtime.RequiredError('parentId','Required parameter requestParameters.parentId was null or undefined when calling customObjectClassesAssociationTypesRetrieve.');
        }

        const queryParameters: any = {};

        if (requestParameters.expand !== undefined) {
            queryParameters['expand'] = requestParameters.expand;
        }

        if (requestParameters.includeRemoteData !== undefined) {
            queryParameters['include_remote_data'] = requestParameters.includeRemoteData;
        }

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/crm/v1/custom-object-classes/{parent_id}/association-types/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"parent_id"}}`, encodeURIComponent(String(requestParameters.parentId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AssociationTypeFromJSON(jsonValue));
    }

    /**
     * Returns an `AssociationType` object with the given `id`.
     */
    async customObjectClassesAssociationTypesRetrieve(requestParameters: CustomObjectClassesAssociationTypesRetrieveRequest): Promise<AssociationType | undefined> {
        const response = await this.customObjectClassesAssociationTypesRetrieveRaw(requestParameters);
        return await response.value();
    }

    /**
     * Returns a list of `Association` objects.
     */
    async customObjectClassesCustomObjectsAssociationsListRaw(requestParameters: CustomObjectClassesCustomObjectsAssociationsListRequest): Promise<runtime.ApiResponse<MergePaginatedResponse<Association> | undefined>> {
        if (requestParameters.objectId === null || requestParameters.objectId === undefined) {
            throw new runtime.RequiredError('objectId','Required parameter requestParameters.objectId was null or undefined when calling customObjectClassesCustomObjectsAssociationsList.');
        }

        if (requestParameters.parentId === null || requestParameters.parentId === undefined) {
            throw new runtime.RequiredError('parentId','Required parameter requestParameters.parentId was null or undefined when calling customObjectClassesCustomObjectsAssociationsList.');
        }

        const queryParameters: any = {};

        if (requestParameters.associationTypeId !== undefined) {
            queryParameters['association_type_id'] = requestParameters.associationTypeId;
        }

        if (requestParameters.createdAfter !== undefined) {
            queryParameters['created_after'] = (requestParameters.createdAfter as any).toISOString();
        }

        if (requestParameters.createdBefore !== undefined) {
            queryParameters['created_before'] = (requestParameters.createdBefore as any).toISOString();
        }

        if (requestParameters.cursor !== undefined) {
            queryParameters['cursor'] = requestParameters.cursor;
        }

        if (requestParameters.expand !== undefined) {
            queryParameters['expand'] = requestParameters.expand;
        }

        if (requestParameters.includeDeletedData !== undefined) {
            queryParameters['include_deleted_data'] = requestParameters.includeDeletedData;
        }

        if (requestParameters.includeRemoteData !== undefined) {
            queryParameters['include_remote_data'] = requestParameters.includeRemoteData;
        }

        if (requestParameters.modifiedAfter !== undefined) {
            queryParameters['modified_after'] = (requestParameters.modifiedAfter as any).toISOString();
        }

        if (requestParameters.modifiedBefore !== undefined) {
            queryParameters['modified_before'] = (requestParameters.modifiedBefore as any).toISOString();
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['page_size'] = requestParameters.pageSize;
        }

        if (requestParameters.remoteId !== undefined) {
            queryParameters['remote_id'] = requestParameters.remoteId;
        }

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/crm/v1/custom-object-classes/{parent_id}/custom-objects/{object_id}/associations`.replace(`{${"object_id"}}`, encodeURIComponent(String(requestParameters.objectId))).replace(`{${"parent_id"}}`, encodeURIComponent(String(requestParameters.parentId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MergePaginatedResponseFromJSON(jsonValue));
    }

    /**
     * Returns a list of `Association` objects.
     */
    async customObjectClassesCustomObjectsAssociationsList(requestParameters: CustomObjectClassesCustomObjectsAssociationsListRequest): Promise<MergePaginatedResponse<Association> | undefined> {
        const response = await this.customObjectClassesCustomObjectsAssociationsListRaw(requestParameters);
        return await response.value();
    }

    /**
     * Returns a list of `CustomObject` objects.
     */
    async customObjectClassesCustomObjectsListRaw(requestParameters: CustomObjectClassesCustomObjectsListRequest): Promise<runtime.ApiResponse<MergePaginatedResponse<CustomObject> | undefined>> {
        if (requestParameters.parentId === null || requestParameters.parentId === undefined) {
            throw new runtime.RequiredError('parentId','Required parameter requestParameters.parentId was null or undefined when calling customObjectClassesCustomObjectsList.');
        }

        const queryParameters: any = {};

        if (requestParameters.cursor !== undefined) {
            queryParameters['cursor'] = requestParameters.cursor;
        }

        if (requestParameters.includeDeletedData !== undefined) {
            queryParameters['include_deleted_data'] = requestParameters.includeDeletedData;
        }

        if (requestParameters.includeRemoteData !== undefined) {
            queryParameters['include_remote_data'] = requestParameters.includeRemoteData;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['page_size'] = requestParameters.pageSize;
        }

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/crm/v1/custom-object-classes/{parent_id}/custom-objects`.replace(`{${"parent_id"}}`, encodeURIComponent(String(requestParameters.parentId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MergePaginatedResponseFromJSON(jsonValue));
    }

    /**
     * Returns a list of `CustomObject` objects.
     */
    async customObjectClassesCustomObjectsList(requestParameters: CustomObjectClassesCustomObjectsListRequest): Promise<MergePaginatedResponse<CustomObject> | undefined> {
        const response = await this.customObjectClassesCustomObjectsListRaw(requestParameters);
        return await response.value();
    }

    /**
     * Returns a `CustomObject` object with the given `id`.
     */
    async customObjectClassesCustomObjectsRetrieveRaw(requestParameters: CustomObjectClassesCustomObjectsRetrieveRequest): Promise<runtime.ApiResponse<CustomObject | undefined>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling customObjectClassesCustomObjectsRetrieve.');
        }

        if (requestParameters.parentId === null || requestParameters.parentId === undefined) {
            throw new runtime.RequiredError('parentId','Required parameter requestParameters.parentId was null or undefined when calling customObjectClassesCustomObjectsRetrieve.');
        }

        const queryParameters: any = {};

        if (requestParameters.includeRemoteData !== undefined) {
            queryParameters['include_remote_data'] = requestParameters.includeRemoteData;
        }

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/crm/v1/custom-object-classes/{parent_id}/custom-objects/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"parent_id"}}`, encodeURIComponent(String(requestParameters.parentId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomObjectFromJSON(jsonValue));
    }

    /**
     * Returns a `CustomObject` object with the given `id`.
     */
    async customObjectClassesCustomObjectsRetrieve(requestParameters: CustomObjectClassesCustomObjectsRetrieveRequest): Promise<CustomObject | undefined> {
        const response = await this.customObjectClassesCustomObjectsRetrieveRaw(requestParameters);
        return await response.value();
    }

    /**
     * Returns a list of `CustomObjectClass` objects.
     */
    async customObjectClassesListRaw(requestParameters: CustomObjectClassesListRequest): Promise<runtime.ApiResponse<MergePaginatedResponse<CustomObjectClass> | undefined>> {
        const queryParameters: any = {};

        if (requestParameters.createdAfter !== undefined) {
            queryParameters['created_after'] = (requestParameters.createdAfter as any).toISOString();
        }

        if (requestParameters.createdBefore !== undefined) {
            queryParameters['created_before'] = (requestParameters.createdBefore as any).toISOString();
        }

        if (requestParameters.cursor !== undefined) {
            queryParameters['cursor'] = requestParameters.cursor;
        }

        if (requestParameters.expand !== undefined) {
            queryParameters['expand'] = requestParameters.expand;
        }

        if (requestParameters.includeDeletedData !== undefined) {
            queryParameters['include_deleted_data'] = requestParameters.includeDeletedData;
        }

        if (requestParameters.includeRemoteData !== undefined) {
            queryParameters['include_remote_data'] = requestParameters.includeRemoteData;
        }

        if (requestParameters.modifiedAfter !== undefined) {
            queryParameters['modified_after'] = (requestParameters.modifiedAfter as any).toISOString();
        }

        if (requestParameters.modifiedBefore !== undefined) {
            queryParameters['modified_before'] = (requestParameters.modifiedBefore as any).toISOString();
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['page_size'] = requestParameters.pageSize;
        }

        if (requestParameters.remoteId !== undefined) {
            queryParameters['remote_id'] = requestParameters.remoteId;
        }

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/crm/v1/custom-object-classes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MergePaginatedResponseFromJSON(jsonValue));
    }

    /**
     * Returns a list of `CustomObjectClass` objects.
     */
    async customObjectClassesList(requestParameters: CustomObjectClassesListRequest): Promise<MergePaginatedResponse<CustomObjectClass> | undefined> {
        const response = await this.customObjectClassesListRaw(requestParameters);
        return await response.value();
    }

    /**
     * Returns a `CustomObjectClass` object with the given `id`.
     */
    async customObjectClassesRetrieveRaw(requestParameters: CustomObjectClassesRetrieveRequest): Promise<runtime.ApiResponse<CustomObjectClass | undefined>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling customObjectClassesRetrieve.');
        }

        const queryParameters: any = {};

        if (requestParameters.expand !== undefined) {
            queryParameters['expand'] = requestParameters.expand;
        }

        if (requestParameters.includeRemoteData !== undefined) {
            queryParameters['include_remote_data'] = requestParameters.includeRemoteData;
        }

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/crm/v1/custom-object-classes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomObjectClassFromJSON(jsonValue));
    }

    /**
     * Returns a `CustomObjectClass` object with the given `id`.
     */
    async customObjectClassesRetrieve(requestParameters: CustomObjectClassesRetrieveRequest): Promise<CustomObjectClass | undefined> {
        const response = await this.customObjectClassesRetrieveRaw(requestParameters);
        return await response.value();
    }

}

/**
* @export
* @enum {string}
*/
export enum CustomObjectClassesAssociationTypesListExpandEnum {
    TargetObjectClasses = 'target_object_classes'
}
/**
* @export
* @enum {string}
*/
export enum CustomObjectClassesAssociationTypesRetrieveExpandEnum {
    TargetObjectClasses = 'target_object_classes'
}
/**
* @export
* @enum {string}
*/
export enum CustomObjectClassesCustomObjectsAssociationsListExpandEnum {
    AssociationType = 'association_type'
}
/**
* @export
* @enum {string}
*/
export enum CustomObjectClassesListExpandEnum {
    Fields = 'fields'
}
/**
* @export
* @enum {string}
*/
export enum CustomObjectClassesRetrieveExpandEnum {
    Fields = 'fields'
}
