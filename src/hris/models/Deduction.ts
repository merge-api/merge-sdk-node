/* tslint:disable */
/* eslint-disable */
/**
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    
} from './';
import {
	RemoteData,
	RemoteDataFromJSON,
	RemoteDataFromJSONTyped,
	RemoteDataToJSON,
} from '../../remote_data';


/**
 * # The Deduction Object
 * ### Description
 * The `Deduction` object is used to represent a deduction for a given employee's payroll run. One run could include several deductions.
 * 
 * ### Usage Example
 * Fetch from the `LIST Deductions` endpoint and filter by `ID` to show all deductions.
 * @export
 * @interface Deduction
 */
export interface Deduction {
    /**
     * 
     * @type {string}
     * @memberof Deduction
     */
    readonly id?: string;
    /**
     * The deduction's employee payroll run.
     * @type {string}
     * @memberof Deduction
     */
    employee_payroll_run?: string | null;
    /**
     * The deduction's name.
     * @type {string}
     * @memberof Deduction
     */
    name?: string | null;
    /**
     * The amount the employee is deducting.
     * @type {number}
     * @memberof Deduction
     */
    employee_deduction?: number | null;
    /**
     * The amount the company is deducting.
     * @type {number}
     * @memberof Deduction
     */
    company_deduction?: number | null;
    /**
     * 
     * @type {Array<RemoteData>}
     * @memberof Deduction
     */
    readonly remote_data?: Array<RemoteData> | null;
    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     * @type {boolean}
     * @memberof Deduction
     */
    remote_was_deleted?: boolean;
}

export function DeductionFromJSON(json: JSONValue): Deduction | undefined {
    return DeductionFromJSONTyped(json);
}

export function DeductionFromJSONTyped(json: JSONValue): Deduction | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'employee_payroll_run': !exists(json, 'employee_payroll_run') ? undefined : json['employee_payroll_run'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'employee_deduction': !exists(json, 'employee_deduction') ? undefined : json['employee_deduction'],
        'company_deduction': !exists(json, 'company_deduction') ? undefined : json['company_deduction'],
        'remote_data': !exists(json, 'remote_data') ? undefined : (json['remote_data'] === null ? null : (json['remote_data'] as Array<JSONValue>).map(RemoteDataFromJSON)) as Array<RemoteData>,
        'remote_was_deleted': !exists(json, 'remote_was_deleted') ? undefined : json['remote_was_deleted'],
    };
}

export function DeductionToJSON(value?: Deduction): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'employee_payroll_run': value.employee_payroll_run,
        'name': value.name,
        'employee_deduction': value.employee_deduction,
        'company_deduction': value.company_deduction,
        'remote_was_deleted': value.remote_was_deleted,
    };
}

