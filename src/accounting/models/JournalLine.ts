/* tslint:disable */
/* eslint-disable */
/**
 * Merge Accounting API
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';

/**
 * # The JournalLine Object
 * ### Description
 * The `JournalLine` object is used to represent a journal entry's line items.
 * 
 * ### Usage Example
 * Fetch from the `GET JournalEntry` endpoint and view the journal entry's line items.
 * @export
 * @interface JournalLine
 */
export interface JournalLine {
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof JournalLine
     */
    remote_id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof JournalLine
     */
    account?: string | JSONValue | null;
    /**
     * The value of the line item including taxes and other fees.
     * @type {number}
     * @memberof JournalLine
     */
    net_amount?: number | null;
    /**
     * 
     * @type {string}
     * @memberof JournalLine
     */
    tracking_category?: string | JSONValue | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof JournalLine
     */
    tracking_categories?: Array<string> | JSONValue;
    /**
     * 
     * @type {string}
     * @memberof JournalLine
     */
    contact?: string | null;
    /**
     * The line's description.
     * @type {string}
     * @memberof JournalLine
     */
    description?: string | null;
}

export function JournalLineFromJSON(json: JSONValue): JournalLine | undefined {
    return JournalLineFromJSONTyped(json);
}

export function JournalLineFromJSONTyped(json: JSONValue): JournalLine | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
        'account': !exists(json, 'account') ? undefined : json['account'],
        'net_amount': !exists(json, 'net_amount') ? undefined : json['net_amount'],
        'tracking_category': !exists(json, 'tracking_category') ? undefined : json['tracking_category'],
        'tracking_categories': !exists(json, 'tracking_categories') ? undefined : json['tracking_categories'],
        'contact': !exists(json, 'contact') ? undefined : json['contact'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function JournalLineToJSON(value?: JournalLine): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'remote_id': value.remote_id,
        'account': value.account,
        'net_amount': value.net_amount,
        'tracking_category': value.tracking_category,
        'tracking_categories': value.tracking_categories,
        'contact': value.contact,
        'description': value.description,
    };
}

