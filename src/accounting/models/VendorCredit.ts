/* tslint:disable */
/* eslint-disable */
/**
 * Merge Accounting API
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    CurrencyEnum,
    CurrencyEnumFromJSON,
    CurrencyEnumFromJSONTyped,
    CurrencyEnumToJSON,
    
    VendorCreditLine,
    VendorCreditLineFromJSON,
    VendorCreditLineFromJSONTyped,
    VendorCreditLineToJSON,
} from './';
import {
	RemoteData,
	RemoteDataFromJSON,
	RemoteDataFromJSONTyped,
	RemoteDataToJSON,
} from '../../remote_data';


/**
 * # The VendorCredit Object
 * ### Description
 * The `VendorCredit` object is used to represent a company's vendor credits.
 * 
 * ### Usage Example
 * Fetch from the `GET VendorCredit` endpoint and view a company's vendor credits.
 * @export
 * @interface VendorCredit
 */
export interface VendorCredit {
    /**
     * 
     * @type {string}
     * @memberof VendorCredit
     */
    readonly id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof VendorCredit
     */
    remote_id?: string | null;
    /**
     * 
     * @type {Array<RemoteData>}
     * @memberof VendorCredit
     */
    readonly remote_data?: Array<RemoteData> | null;
    /**
     * The vendor credit's number.
     * @type {string}
     * @memberof VendorCredit
     */
    number?: string | null;
    /**
     * The vendor credit's transaction date.
     * @type {Date}
     * @memberof VendorCredit
     */
    transaction_date?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof VendorCredit
     */
    vendor?: string | null;
    /**
     * The vendor credit's total amount.
     * @type {number}
     * @memberof VendorCredit
     */
    total_amount?: number | null;
    /**
     * The vendor credit's currency.
     * @type {CurrencyEnum}
     * @memberof VendorCredit
     */
    currency?: CurrencyEnum | null;
    /**
     * 
     * @type {Array<VendorCreditLine>}
     * @memberof VendorCredit
     */
    readonly lines?: Array<VendorCreditLine>;
    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     * @type {boolean}
     * @memberof VendorCredit
     */
    readonly remote_was_deleted?: boolean;
}

export function VendorCreditFromJSON(json: JSONValue): VendorCredit | null {
    return VendorCreditFromJSONTyped(json);
}

export function VendorCreditFromJSONTyped(json: JSONValue): VendorCredit | null {
    if ((json === undefined) || (json === null)) {
        return null;
    }

    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
        'remote_data': !exists(json, 'remote_data') ? undefined : (json['remote_data'] === null ? null : (json['remote_data'] as Array<any>).map(RemoteDataFromJSON)),
        'number': !exists(json, 'number') ? undefined : json['number'],
        'transaction_date': !exists(json, 'transaction_date') ? undefined : (json['transaction_date'] === null ? null : new Date(json['transaction_date'])),
        'vendor': !exists(json, 'vendor') ? undefined : json['vendor'],
        'total_amount': !exists(json, 'total_amount') ? undefined : json['total_amount'],
        'currency': !exists(json, 'currency') ? undefined : CurrencyEnumFromJSON(json['currency']),
        'lines': !exists(json, 'lines') ? undefined : ((json['lines'] as Array<any>).map(VendorCreditLineFromJSON)),
        'remote_was_deleted': !exists(json, 'remote_was_deleted') ? undefined : json['remote_was_deleted'],
    };
}

export function VendorCreditToJSON(value?: VendorCredit): JSONValue {
    if (value === undefined || value === null) {
        return null;
    }

    return {
        
        'remote_id': value.remote_id,
        'number': value.number,
        'transaction_date': value.transaction_date === undefined ? undefined : (value.transaction_date === null ? null : value.transaction_date.toISOString()),
        'vendor': value.vendor,
        'total_amount': value.total_amount,
        'currency': CurrencyEnumToJSON(value.currency),
    };
}

