/* tslint:disable */
/* eslint-disable */
/**
 * Merge Accounting API
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';

/**
 * # The ReportItem Object
 * ### Description
 * The `ReportItem` object is used to represent a report item for a Balance Sheet, Cash Flow Statement or Profit and Loss Report.
 * 
 * ### Usage Example
 * Fetch from the `GET BalanceSheet` endpoint and view the balance sheet's report items.
 * @export
 * @interface ReportItem
 */
export interface ReportItem {
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof ReportItem
     */
    remote_id?: string | null;
    /**
     * The report item's name.
     * @type {string}
     * @memberof ReportItem
     */
    name?: string | null;
    /**
     * The report item's value.
     * @type {number}
     * @memberof ReportItem
     */
    value?: number | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ReportItem
     */
    readonly sub_items?: { [key: string]: any; };
    /**
     * The company the report item belongs to.
     * @type {string}
     * @memberof ReportItem
     */
    company?: string | null;
    /**
     * This is the datetime that this object was last updated by Merge
     * @type {Date}
     * @memberof ReportItem
     */
    readonly modified_at?: Date;
}

export function ReportItemFromJSON(json: JSONValue): ReportItem | undefined {
    return ReportItemFromJSONTyped(json);
}

export function ReportItemFromJSONTyped(json: JSONValue): ReportItem | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'sub_items': !exists(json, 'sub_items') ? undefined : json['sub_items'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'modified_at': !exists(json, 'modified_at') ? undefined : (new Date(json['modified_at'])),
    };
}

export function ReportItemToJSON(value?: ReportItem): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'remote_id': value.remote_id,
        'name': value.name,
        'value': value.value,
        'company': value.company,
    };
}

