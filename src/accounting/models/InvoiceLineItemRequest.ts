/* tslint:disable */
/* eslint-disable */
/**
 * Merge Accounting API
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    CurrencyEnum,
    CurrencyEnumFromJSON,
    CurrencyEnumFromJSONTyped,
    CurrencyEnumToJSON,
} from './';


/**
 * # The InvoiceLineItem Object
 * ### Description
 * The `InvoiceLineItem` object represents an itemized record of goods and/or services sold to a customer. If type = accounts_payable, invoice is a bill, if type = accounts_receivable it's an invoice.
 * 
 * ### Usage Example
 * Fetch from the `GET Invoice` endpoint and view the invoice's line items.
 * @export
 * @interface InvoiceLineItemRequest
 */
export interface InvoiceLineItemRequest {
    /**
     * The line item's description.
     * @type {string}
     * @memberof InvoiceLineItemRequest
     */
    description?: string | null;
    /**
     * The line item's unit price.
     * @type {number}
     * @memberof InvoiceLineItemRequest
     */
    unit_price?: number | null;
    /**
     * The line item's quantity.
     * @type {number}
     * @memberof InvoiceLineItemRequest
     */
    quantity?: number | null;
    /**
     * The line item's total amount.
     * @type {number}
     * @memberof InvoiceLineItemRequest
     */
    total_amount?: number | null;
    /**
     * The line item's currency.
     * @type {CurrencyEnum}
     * @memberof InvoiceLineItemRequest
     */
    currency?: CurrencyEnum | null;
    /**
     * The line item's exchange rate.
     * @type {string}
     * @memberof InvoiceLineItemRequest
     */
    exchange_rate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItemRequest
     */
    item?: string | JSONValue | null;
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItemRequest
     */
    account?: string | JSONValue | null;
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItemRequest
     */
    tracking_category?: string | JSONValue | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof InvoiceLineItemRequest
     */
    tracking_categories?: Array<string> | JSONValue;
    /**
     * The company the line item belongs to.
     * @type {string}
     * @memberof InvoiceLineItemRequest
     */
    company?: string | null;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof InvoiceLineItemRequest
     */
    remote_id?: string | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof InvoiceLineItemRequest
     */
    integration_params?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof InvoiceLineItemRequest
     */
    linked_account_params?: { [key: string]: any; } | null;
}

export function InvoiceLineItemRequestFromJSON(json: JSONValue): InvoiceLineItemRequest | undefined {
    return InvoiceLineItemRequestFromJSONTyped(json);
}

export function InvoiceLineItemRequestFromJSONTyped(json: JSONValue): InvoiceLineItemRequest | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'unit_price': !exists(json, 'unit_price') ? undefined : json['unit_price'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'total_amount': !exists(json, 'total_amount') ? undefined : json['total_amount'],
        'currency': !exists(json, 'currency') ? undefined : CurrencyEnumFromJSON(json['currency']) as CurrencyEnum,
        'exchange_rate': !exists(json, 'exchange_rate') ? undefined : json['exchange_rate'],
        'item': !exists(json, 'item') ? undefined : json['item'],
        'account': !exists(json, 'account') ? undefined : json['account'],
        'tracking_category': !exists(json, 'tracking_category') ? undefined : json['tracking_category'],
        'tracking_categories': !exists(json, 'tracking_categories') ? undefined : json['tracking_categories'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
        'integration_params': !exists(json, 'integration_params') ? undefined : json['integration_params'],
        'linked_account_params': !exists(json, 'linked_account_params') ? undefined : json['linked_account_params'],
    };
}

export function InvoiceLineItemRequestToJSON(value?: InvoiceLineItemRequest): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'description': value.description,
        'unit_price': value.unit_price,
        'quantity': value.quantity,
        'total_amount': value.total_amount,
        'currency': CurrencyEnumToJSON(value.currency),
        'exchange_rate': value.exchange_rate,
        'item': value.item,
        'account': value.account,
        'tracking_category': value.tracking_category,
        'tracking_categories': value.tracking_categories,
        'company': value.company,
        'remote_id': value.remote_id,
        'integration_params': value.integration_params,
        'linked_account_params': value.linked_account_params,
    };
}

