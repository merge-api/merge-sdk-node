/* tslint:disable */
/* eslint-disable */
/**
 * Merge Accounting API
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../runtime';
import {
    Address,
    AddressFromJSON,
    AddressToJSON,
} from '../models';

import {
    MergeMetaRequest
} from '../../merge_meta_request';

export interface AddressesRetrieveRequest {
    id: string;
    includeRemoteData?: boolean;
    remoteFields?: AddressesRetrieveRemoteFieldsEnum;
    showEnumOrigins?: AddressesRetrieveShowEnumOriginsEnum;
}

/**
 * 
 */
export class AddressesApi extends runtime.BaseAPI {

    /**
     * Returns an `Address` object with the given `id`.
     */
    async addressesRetrieveRaw(requestParameters: AddressesRetrieveRequest): Promise<runtime.ApiResponse<Address | undefined>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling addressesRetrieve.');
        }

        const queryParameters: any = {};

        if (requestParameters.includeRemoteData !== undefined) {
            queryParameters['include_remote_data'] = requestParameters.includeRemoteData;
        }

        if (requestParameters.remoteFields !== undefined) {
            queryParameters['remote_fields'] = requestParameters.remoteFields;
        }

        if (requestParameters.showEnumOrigins !== undefined) {
            queryParameters['show_enum_origins'] = requestParameters.showEnumOrigins;
        }


        

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/accounting/v1/addresses/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AddressFromJSON(jsonValue));
    }

    /**
     * Returns an `Address` object with the given `id`.
     */
    async addressesRetrieve(requestParameters: AddressesRetrieveRequest): Promise<Address | undefined> {
        const response = await this.addressesRetrieveRaw(requestParameters);
        return await response.value();
    }

}

/**
* @export
* @enum {string}
*/
export enum AddressesRetrieveRemoteFieldsEnum {
    Type = 'type'
}
/**
* @export
* @enum {string}
*/
export enum AddressesRetrieveShowEnumOriginsEnum {
    Type = 'type'
}
