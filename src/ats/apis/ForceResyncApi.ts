/* tslint:disable */
/* eslint-disable */
/**
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../runtime';
import {
    SyncStatus,
    SyncStatusFromJSON,
    SyncStatusToJSON,
} from '../models';

/**
 * 
 */
export class ForceResyncApi extends runtime.BaseAPI {

    /**
     * Force re-sync of all models. This is only available for organizations on Merge\'s Grow and Expand plans.
     */
    async syncStatusResyncCreateRaw(): Promise<runtime.ApiResponse<Array<SyncStatus> | undefined>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        if (this.configuration && this.configuration.accessToken) {
            headerParameters["X-Account-Token"] = this.configuration.accessToken; // bearerAuth authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${this.configuration.apiKey}`;
        }

        const response = await this.request({
            path: `/ats/v1/sync-status/resync`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SyncStatusFromJSON));
    }

    /**
     * Force re-sync of all models. This is only available for organizations on Merge\'s Grow and Expand plans.
     */
    async syncStatusResyncCreate(): Promise<Array<SyncStatus> | undefined> {
        const response = await this.syncStatusResyncCreateRaw();
        return await response.value();
    }

}
