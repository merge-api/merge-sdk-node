/* tslint:disable */
/* eslint-disable */
/**
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    DisabilityStatusEnum,
    DisabilityStatusEnumFromJSON,
    DisabilityStatusEnumFromJSONTyped,
    DisabilityStatusEnumToJSON,
    GenderEnum,
    GenderEnumFromJSON,
    GenderEnumFromJSONTyped,
    GenderEnumToJSON,
    RaceEnum,
    RaceEnumFromJSON,
    RaceEnumFromJSONTyped,
    RaceEnumToJSON,
    
    VeteranStatusEnum,
    VeteranStatusEnumFromJSON,
    VeteranStatusEnumFromJSONTyped,
    VeteranStatusEnumToJSON,
} from './';
import {
	RemoteData,
	RemoteDataFromJSON,
	RemoteDataFromJSONTyped,
	RemoteDataToJSON,
} from '../../remote_data';


/**
 * # The EEOC Object
 * ### Description
 * The `EEOC` object is used to represent the Equal Employment Opportunity Commission information for a candidate (race, gender, veteran status, disability status).
 * ### Usage Example
 * Fetch from the `LIST EEOCs` endpoint and filter by `candidate` to show all EEOC information for a candidate.
 * @export
 * @interface EEOC
 */
export interface EEOC {
    /**
     * 
     * @type {string}
     * @memberof EEOC
     */
    readonly id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof EEOC
     */
    remote_id?: string | null;
    /**
     * The candidate being represented.
     * @type {string}
     * @memberof EEOC
     */
    candidate?: string | JSONValue | null;
    /**
     * When the information was submitted.
     * @type {Date}
     * @memberof EEOC
     */
    submitted_at?: Date | null;
    /**
     * The candidate's race.
     * 
     * * `AMERICAN_INDIAN_OR_ALASKAN_NATIVE` - AMERICAN_INDIAN_OR_ALASKAN_NATIVE
     * * `ASIAN` - ASIAN
     * * `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN
     * * `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO
     * * `WHITE` - WHITE
     * * `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
     * * `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES
     * * `DECLINE_TO_SELF_IDENTIFY` - DECLINE_TO_SELF_IDENTIFY
     * @type {RaceEnum}
     * @memberof EEOC
     */
    race?: RaceEnum | null;
    /**
     * The candidate's gender.
     * 
     * * `MALE` - MALE
     * * `FEMALE` - FEMALE
     * * `NON-BINARY` - NON-BINARY
     * * `OTHER` - OTHER
     * * `DECLINE_TO_SELF_IDENTIFY` - DECLINE_TO_SELF_IDENTIFY
     * @type {GenderEnum}
     * @memberof EEOC
     */
    gender?: GenderEnum | null;
    /**
     * The candidate's veteran status.
     * 
     * * `I_AM_NOT_A_PROTECTED_VETERAN` - I_AM_NOT_A_PROTECTED_VETERAN
     * * `I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN` - I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN
     * * `I_DONT_WISH_TO_ANSWER` - I_DONT_WISH_TO_ANSWER
     * @type {VeteranStatusEnum}
     * @memberof EEOC
     */
    veteran_status?: VeteranStatusEnum | null;
    /**
     * The candidate's disability status.
     * 
     * * `YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY` - YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY
     * * `NO_I_DONT_HAVE_A_DISABILITY` - NO_I_DONT_HAVE_A_DISABILITY
     * * `I_DONT_WISH_TO_ANSWER` - I_DONT_WISH_TO_ANSWER
     * @type {DisabilityStatusEnum}
     * @memberof EEOC
     */
    disability_status?: DisabilityStatusEnum | null;
    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     * @type {boolean}
     * @memberof EEOC
     */
    readonly remote_was_deleted?: boolean;
    /**
     * This is the datetime that this object was last updated by Merge
     * @type {Date}
     * @memberof EEOC
     */
    readonly modified_at?: Date;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof EEOC
     */
    readonly field_mappings?: { [key: string]: any; } | null;
    /**
     * 
     * @type {Array<RemoteData>}
     * @memberof EEOC
     */
    readonly remote_data?: Array<RemoteData> | null;
}

export function EEOCFromJSON(json: JSONValue): EEOC | undefined {
    return EEOCFromJSONTyped(json);
}

export function EEOCFromJSONTyped(json: JSONValue): EEOC | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
        'candidate': !exists(json, 'candidate') ? undefined : json['candidate'],
        'submitted_at': !exists(json, 'submitted_at') ? undefined : (json['submitted_at'] === null ? null : new Date(json['submitted_at'])),
        'race': !exists(json, 'race') ? undefined : RaceEnumFromJSON(json['race']) as RaceEnum,
        'gender': !exists(json, 'gender') ? undefined : GenderEnumFromJSON(json['gender']) as GenderEnum,
        'veteran_status': !exists(json, 'veteran_status') ? undefined : VeteranStatusEnumFromJSON(json['veteran_status']) as VeteranStatusEnum,
        'disability_status': !exists(json, 'disability_status') ? undefined : DisabilityStatusEnumFromJSON(json['disability_status']) as DisabilityStatusEnum,
        'remote_was_deleted': !exists(json, 'remote_was_deleted') ? undefined : json['remote_was_deleted'],
        'modified_at': !exists(json, 'modified_at') ? undefined : (new Date(json['modified_at'])),
        'field_mappings': !exists(json, 'field_mappings') ? undefined : json['field_mappings'],
        'remote_data': !exists(json, 'remote_data') ? undefined : (json['remote_data'] === null ? null : (json['remote_data'] as Array<JSONValue>).map(RemoteDataFromJSON)) as Array<RemoteData>,
    };
}

export function EEOCToJSON(value?: EEOC): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'remote_id': value.remote_id,
        'candidate': value.candidate,
        'submitted_at': value.submitted_at === undefined ? undefined : (value.submitted_at === null ? null : value.submitted_at.toISOString()),
        'race': RaceEnumToJSON(value.race),
        'gender': GenderEnumToJSON(value.gender),
        'veteran_status': VeteranStatusEnumToJSON(value.veteran_status),
        'disability_status': DisabilityStatusEnumToJSON(value.disability_status),
    };
}

