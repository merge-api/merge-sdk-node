/* tslint:disable */
/* eslint-disable */
/**
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    
} from './';
import {
	RemoteData,
	RemoteDataFromJSON,
	RemoteDataFromJSONTyped,
	RemoteDataToJSON,
} from '../../remote_data';


/**
 * # The Application Object
 * ### Description
 * The `Application` object is used to represent an Application for a job position. This is separate from the Candidate object, although some systems may only allow a Candidate to have one Application.
 * 
 * Please note: Application objects are constructed if the object does not exist in the remote system.
 * 
 * ### Usage Example
 * Fetch from the `LIST Applications` endpoint and filter by `ID` to show all applications.
 * @export
 * @interface Application
 */
export interface Application {
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    readonly id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof Application
     */
    remote_id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    candidate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    job?: string | null;
    /**
     * When the application was submitted.
     * @type {Date}
     * @memberof Application
     */
    applied_at?: Date | null;
    /**
     * When the application was rejected.
     * @type {Date}
     * @memberof Application
     */
    rejected_at?: Date | null;
    /**
     * The application's source.
     * @type {string}
     * @memberof Application
     */
    source?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    credited_to?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    current_stage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Application
     */
    reject_reason?: string | null;
    /**
     * 
     * @type {Array<RemoteData>}
     * @memberof Application
     */
    readonly remote_data?: Array<RemoteData> | null;
    /**
     * Custom fields configured for a given model.
     * @type {{ [key: string]: any; }}
     * @memberof Application
     */
    custom_fields?: { [key: string]: any; } | null;
    /**
     * 
     * @type {boolean}
     * @memberof Application
     */
    readonly remote_was_deleted?: boolean;
}

export function ApplicationFromJSON(json: JSONValue): Application | undefined {
    return ApplicationFromJSONTyped(json);
}

export function ApplicationFromJSONTyped(json: JSONValue): Application | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
        'candidate': !exists(json, 'candidate') ? undefined : json['candidate'],
        'job': !exists(json, 'job') ? undefined : json['job'],
        'applied_at': !exists(json, 'applied_at') ? undefined : (json['applied_at'] === null ? null : new Date(json['applied_at'])),
        'rejected_at': !exists(json, 'rejected_at') ? undefined : (json['rejected_at'] === null ? null : new Date(json['rejected_at'])),
        'source': !exists(json, 'source') ? undefined : json['source'],
        'credited_to': !exists(json, 'credited_to') ? undefined : json['credited_to'],
        'current_stage': !exists(json, 'current_stage') ? undefined : json['current_stage'],
        'reject_reason': !exists(json, 'reject_reason') ? undefined : json['reject_reason'],
        'remote_data': !exists(json, 'remote_data') ? undefined : (json['remote_data'] === null ? null : (json['remote_data'] as Array<JSONValue>).map(RemoteDataFromJSON)) as Array<RemoteData>,
        'custom_fields': !exists(json, 'custom_fields') ? undefined : json['custom_fields'],
        'remote_was_deleted': !exists(json, 'remote_was_deleted') ? undefined : json['remote_was_deleted'],
    };
}

export function ApplicationToJSON(value?: Application): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'remote_id': value.remote_id,
        'candidate': value.candidate,
        'job': value.job,
        'applied_at': value.applied_at === undefined ? undefined : (value.applied_at === null ? null : value.applied_at.toISOString()),
        'rejected_at': value.rejected_at === undefined ? undefined : (value.rejected_at === null ? null : value.rejected_at.toISOString()),
        'source': value.source,
        'credited_to': value.credited_to,
        'current_stage': value.current_stage,
        'reject_reason': value.reject_reason,
        'custom_fields': value.custom_fields,
    };
}

