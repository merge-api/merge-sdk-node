/* tslint:disable */
/* eslint-disable */
/**
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import { JSONValue } from '../../merge_json';
import {
    AccessRoleEnum,
    AccessRoleEnumFromJSON,
    AccessRoleEnumFromJSONTyped,
    AccessRoleEnumToJSON,
    
} from './';
import {
	RemoteData,
	RemoteDataFromJSON,
	RemoteDataFromJSONTyped,
	RemoteDataToJSON,
} from '../../remote_data';


/**
 * # The RemoteUser Object
 * ### Description
 * The `RemoteUser` object is used to represent a user with a login to the ATS system.
 * ### Usage Example
 * Fetch from the `LIST RemoteUsers` endpoint to show all users for a third party.
 * @export
 * @interface RemoteUser
 */
export interface RemoteUser {
    /**
     * 
     * @type {string}
     * @memberof RemoteUser
     */
    readonly id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof RemoteUser
     */
    remote_id?: string | null;
    /**
     * The user's first name.
     * @type {string}
     * @memberof RemoteUser
     */
    first_name?: string | null;
    /**
     * The user's last name.
     * @type {string}
     * @memberof RemoteUser
     */
    last_name?: string | null;
    /**
     * The user's email.
     * @type {string}
     * @memberof RemoteUser
     */
    email?: string | null;
    /**
     * Whether the user's account had been disabled.
     * @type {boolean}
     * @memberof RemoteUser
     */
    disabled?: boolean | null;
    /**
     * When the third party's user was created.
     * @type {Date}
     * @memberof RemoteUser
     */
    remote_created_at?: Date | null;
    /**
     * The user's role.
     * @type {AccessRoleEnum}
     * @memberof RemoteUser
     */
    access_role?: AccessRoleEnum | null;
    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     * @type {boolean}
     * @memberof RemoteUser
     */
    readonly remote_was_deleted?: boolean;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof RemoteUser
     */
    readonly field_mappings?: { [key: string]: any; } | null;
    /**
     * 
     * @type {Array<RemoteData>}
     * @memberof RemoteUser
     */
    readonly remote_data?: Array<RemoteData> | null;
}

export function RemoteUserFromJSON(json: JSONValue): RemoteUser | undefined {
    return RemoteUserFromJSONTyped(json);
}

export function RemoteUserFromJSONTyped(json: JSONValue): RemoteUser | undefined {
    if ((json === undefined) || (json === null)) {
        return undefined;
    }

    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remote_id': !exists(json, 'remote_id') ? undefined : json['remote_id'],
        'first_name': !exists(json, 'first_name') ? undefined : json['first_name'],
        'last_name': !exists(json, 'last_name') ? undefined : json['last_name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'disabled': !exists(json, 'disabled') ? undefined : json['disabled'],
        'remote_created_at': !exists(json, 'remote_created_at') ? undefined : (json['remote_created_at'] === null ? null : new Date(json['remote_created_at'])),
        'access_role': !exists(json, 'access_role') ? undefined : AccessRoleEnumFromJSON(json['access_role']) as AccessRoleEnum,
        'remote_was_deleted': !exists(json, 'remote_was_deleted') ? undefined : json['remote_was_deleted'],
        'field_mappings': !exists(json, 'field_mappings') ? undefined : json['field_mappings'],
        'remote_data': !exists(json, 'remote_data') ? undefined : (json['remote_data'] === null ? null : (json['remote_data'] as Array<JSONValue>).map(RemoteDataFromJSON)) as Array<RemoteData>,
    };
}

export function RemoteUserToJSON(value?: RemoteUser): JSONValue {
    if (value === undefined || value === null) {
        return undefined;
    }

    return {
        
        'remote_id': value.remote_id,
        'first_name': value.first_name,
        'last_name': value.last_name,
        'email': value.email,
        'disabled': value.disabled,
        'remote_created_at': value.remote_created_at === undefined ? undefined : (value.remote_created_at === null ? null : value.remote_created_at.toISOString()),
        'access_role': AccessRoleEnumToJSON(value.access_role),
    };
}

